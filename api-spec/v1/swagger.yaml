openapi: 3.0.0
info:
  title: Work543
  description: Work543 API Server
  version: 0.5.0
servers:
  - url: http://api.work543.com/v1
    description: Main (production) server
  - url: http://localhost:3000/v1
    description: Internal staging server for testing
tags:
  - name: Users
    Description: Operations of users
  - name: Projects
    Description: Operations of projects
  - name: Resources
    Description: Operation of resources
  - name: Etc
    Description: E.T.C. APIs
paths:
  # /users
  /users:
    get:
      summary: 사용자 목록 반환
      description: 사용자 목록을 반환합니다. 어드민 권한이 필요합니다.
      tags:
        - Users
      responses:
        '200':    # status code
          description: A JSON array of user information
          content:
            application/json:
              schema:
                type: array
                properties:
                  items:
                    $ref: '#/components/schemas/User'
    post:
      summary: 사용자 생성
      description: 사용자를 생성합니다.
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
      responses:
        '200':    # status code
          description: A JSON of user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  # end of /users
  # /users/{id}
  /users/{id}:
    get:
      tags:
        - Users
      summary: 사용자 정보 반환
      description: 사용자 정보를 반환합니다.
      responses:
        '200':    # status code
          description: A JSON of user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    patch:
      tags:
        - Users
      summary: 사용자 정보 수정
      description: 사용자 정보를 수정하여 반환합니다.
      responses:
        '200':    # status code
          description: A JSON of updated user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags:
        - Users
      summary: 사용자 삭제
      description: 사용자를 삭제합니다.
      responses:
        '200':    # status code
          description: A JSON of api response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  # end of /users/{id}
  # /projects
  /projects:
    get:
      summary: 프로젝트 목록 반환
      description: 프로젝트 목록을 반환합니다. 프로젝트 권한이 필요합니다.
      tags:
        - Projects
      responses:
        '200':    # status code
          description: A JSON array of project information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
  # end of /projects
  # /projects/{id}
  /projects/{id}:
    get:
      tags:
        - Projects
      summary: 프로젝트 정보 반환
      description: 프로젝트 정보를 반환합니다. 해당 프로젝트 권한이 필요합니다.
      responses:
        '200':    # status code
          description: A JSON of project information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
    patch:
      tags:
        - Projects
      summary: 프로젝트 정보 수정
      description: 프로젝트 정보를 수정하여 반환합니다. 해당 프로젝트 권한이 필요합니다.
      responses:
        '200':    # status code
          description: A JSON of updated project information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
    delete:
      tags:
        - Projects
      summary: 프로젝트 삭제
      description: 프로젝트를 삭제합니다. 해당 프로젝트 권한이 필요합니다.
      responses:
        '200':    # status code
          description: A JSON of api response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  # end of /projects/{id}
  # /resources
  /resources:
    get:
      summary: 리소스 목록 반환
      description: 리소스 목록을 반환합니다. 리소스 권한이 필요합니다.
      tags:
        - Resources
      responses:
        '200':    # status code
          description: A JSON array of resource information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
  # end of /resources
  # /resources/{id}
  /resources/{id}:
    get:
      tags:
        - Resources
      summary: 리소스 정보 반환
      description: 리소스 정보를 반환합니다. 해당 리소스 권한이 필요합니다.
      responses:
        '200':    # status code
          description: A JSON of resource information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
    patch:
      tags:
        - Resources
      summary: 리소스 정보 수정
      description: 리소스 정보를 수정하여 반환합니다. 해당 리소스 권한이 필요합니다.
      responses:
        '200':    # status code
          description: A JSON of updated resource information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
    delete:
      tags:
        - Resources
      summary: 리소스 삭제
      description: 리소스를 삭제합니다. 해당 리소스 권한이 필요합니다.
      responses:
        '200':    # status code
          description: A JSON of api response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  # end of /resources/{id}

  # /login
  /login:
    post:
      summary: 사용자 로그인
      description: 로그인합니다.
      tags:
        - Etc
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':    # status code
          description: A JSON of user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  # end of /login
  # /logout
  /logout:
    get:
      summary: 사용자 로그아웃
      description: 로그아웃합니다.
      tags:
        - Etc
      responses:
        '200':    # status code
          description: A JSON of api response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  # end of /logout

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firatName:
          type: string
        lastName:
          type: string
        email:
          type: string
        updatedAt:
          type: datetime
        createdAt:
          type: datetime
    Project:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        updatedAt:
          type: datetime
        createdAt:
          type: datetime
    Resource:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
          enum: [facebook, instagram, youtube]
        name:
          type: string
        src:
          type: string
        userId:
          type: integer
          format: int64
        updatedAt:
          type: datetime
        createdAt:
          type: datetime
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
